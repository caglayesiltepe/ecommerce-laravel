services:
    app:
        build:
            context: .  # Proje dosyalarını bağla
            dockerfile: Dockerfile
        container_name: pay-collet-app
        volumes:
            - .:/var/www  # Uygulama dosyalarını konteyner içerisine bağla
        networks:
            - laravel
        depends_on:
            - redis  # Redis'e bağlı olacak

    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "8000:8000"  # 8000 portunu açıyoruz
        volumes:
            - .:/var/www  # Proje dosyalarını Nginx konteynerine bağlıyoruz
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # Nginx konfigürasyonu
        networks:
            - laravel

    db:
        image: mysql:5.7
        container_name: pay-collet-mysql-db
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel-ecommerce
            MYSQL_USER: ecommerce-user
            MYSQL_PASSWORD: 1
        ports:
            - "3308:3306"  # MySQL'in dışarıya port 3306 açmasını sağlıyoruz
        volumes:
            - dbdata:/var/lib/mysql  # MySQL veritabanı verileri
        networks:
            - laravel

    redis:
        image: redis:latest
        container_name: redis-container
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "6379:6379"
        networks:
            - laravel
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}

volumes:
    dbdata:  # MySQL verileri için kalıcı depolama

networks:
    laravel:
        driver: bridge  # Ağ yapılandırması
